name: Rust release
'on':
  workflow_dispatch: null
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
jobs:
  release:
    name: 'Release - ${{ matrix.platform.release_for }}'
    strategy:
      matrix:
        platform:
          - release_for: Linux-x86_64
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            bin: erddap-feeder
            name: erddap-feeder-linux-x86_64
            command: build
            docker_platform: linux/amd64
          # - release_for: Linux-arm7hf
          #   os: ubuntu-latest
          #   target: armv7-unknown-linux-gnueabihf
          #   bin: erddap-feeder
          #   name: erddap-feeder-linux-arm7hf
          #   command: build
          #   docker_platform: linux/arm/v7
    runs-on: '${{ matrix.platform.os }}'
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: '${{ matrix.platform.command }}'
          target: '${{ matrix.platform.target }}'
          args: '--locked --release'
          strip: false
      -
        name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          file: 'target/${{ matrix.platform.target }}/release/${{ matrix.platform.bin }}'
          asset_name: '${{ matrix.platform.name }}'
          tag: '${{ github.ref }}'
          body: 'Tag-based build-and-release'
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform.docker_platform }}
          push: true
          tags: user/app:latest
          build-args: |
            release_name=${{ matrix.platform.target }}
