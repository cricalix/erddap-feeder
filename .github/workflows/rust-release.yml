name: Release
'on':
  workflow_dispatch: null
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
jobs:
  build-release-x86_64:
    name: 'Release - Linux x86_64'
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: build
          target: x86_64-unknown-linux-gnu
          args: '--locked --release'
          strip: false
      -
        name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          file: 'target/x86_64-unknown-linux-gnu/release/erddap-feeder'
          asset_name: erddap-feeder-linux-amd64
          tag: '${{ github.ref }}'
          body: 'Tag-based build-and-release'
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/${{ github.repository }}:latest-amd64
            ghcr.io/${{ github.repository }}:${{ github.sha }}-amd64
          build-args: |
            release_name=target/x86_64-unknown-linux-gnu/release/erddap-feeder

  build-release-armv7:
    name: 'Release - Linux armv7'
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          command: build
          target: armv7-unknown-linux-gnueabihf
          args: '--locked --release'
          strip: false
      -
        name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: '${{ secrets.GITHUB_TOKEN }}'
          file: 'target/armv7-unknown-linux-gnueabihf/release/erddap-feeder'
          asset_name: erddap-feeder-linux-arm7hf
          tag: '${{ github.ref }}'
          body: 'Tag-based build-and-release'
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm/v7
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/${{ github.repository }}:latest-armv7
            ghcr.io/${{ github.repository }}:${{ github.sha }}-armv7
          build-args: |
            release_name=target/armv7-unknown-linux-gnueabihf/release/erddap-feeder
  docker:
    name: 'Docker multi-arch release'
    needs: [build-release-x86_64, build-release-armv7]
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Create SHA manifest and push
        run: |
          docker buildx imagetools create -t ghcr.io/${{ github.repository }}:${{ github.sha }} \
            ghcr.io/${{ github.repository }}:${{ github.sha }}-amd64 \
            ghcr.io/${{ github.repository }}:${{ github.sha }}-armv7
      -
        name: Create latest manifest and push
        run: |
          docker buildx imagetools create -t ghcr.io/${{ github.repository }}:latest \
            ghcr.io/${{ github.repository }}:latest-amd64 \
            ghcr.io/${{ github.repository }}:latest-armv7
